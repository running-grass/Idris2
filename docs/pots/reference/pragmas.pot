# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-23 12:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/pragmas.rst:3
#: e6fc9261e6c44767b733931a3fbc982c
msgid "Pragmas"
msgstr ""

#: ../source/reference/pragmas.rst:8
#: c1c1f364501846e68dd93af0e11bc0ae
msgid "Idris2 supports a number of pragmas (identifiable by the `%` prefix). Some pragmas change compiler behavior until the behavior is changed back using the same pragma while others apply to the following declaration. A small niche of pragmas apply directly to one or more arguments instead of the code following the pragma (like the `%name` pragma described below)."
msgstr ""

#: ../source/reference/pragmas.rst:14
#: 6e808bf3540640c19ec2888bddec70cb
msgid "This page is a work in progress. If you know about a pragma that is not described yet, please consider submitting a pull request!"
msgstr ""

#: ../source/reference/pragmas.rst:19
#: baec70c37f6c44dfaefc265ae9424ff7
msgid "``%builtin``"
msgstr ""

#: ../source/reference/pragmas.rst:21
#: 0b12bd04a1e44099914cd99c5da23906
msgid "The ``%builtin Natural`` pragma converts recursive/unary representations of natural numbers into primitive ``Integer`` representations."
msgstr ""

#: ../source/reference/pragmas.rst:24
#: 988e38ebab464b5cb0131cf2fa67c9a4
msgid "This pragma is explained in detail on its own page. For more, see :ref:`builtins`."
msgstr ""

#: ../source/reference/pragmas.rst:27
#: d4e2fb2fd24d494bad7bd9402f4ff83e
msgid "``%deprecate``"
msgstr ""

#: ../source/reference/pragmas.rst:29
#: 4bb3320e2d5541a5b7f449c0ed8bfd8b
msgid "Mark the following definition as deprecated. Whenever the function is used, Idris will show a deprecation warning."
msgstr ""

#: ../source/reference/pragmas.rst:45
#: 923859d0c0fb4df7afc628001750607f
msgid "You can use code documentation (triple vertical bar `||| docs`) to suggest a strategy for removing the deprecated function call and that documentation will be displayed alongside the warning."
msgstr ""

#: ../source/reference/pragmas.rst:64
#: aee5e7c759904fe8bb7112d4c3065daf
msgid "``%inline``"
msgstr ""

#: ../source/reference/pragmas.rst:66
#: 7c3adc4345e8434b812ccf62dbf2deb0
msgid "Instruct the compiler to inline the following definition when it is applied. It is generally best to let the compiler and the backend you are using optimize code based on its predetermined rules, but if you want to force a function to be inlined when it is called, this pragma will force it."
msgstr ""

#: ../source/reference/pragmas.rst:77
#: 42ec1f2bf45e426d9843b2803f41eeb7
msgid "``%noinline``"
msgstr ""

#: ../source/reference/pragmas.rst:79
#: e63337204d1c491389c545d741c5c00b
msgid "Instruct the compiler _not_ to inline the following definition when it is applied. It is generally best to let the compiler and the backend you are using optimize code based on its predetermined rules, but if you want to force a function to never be inlined when it is called, this pragma will force it."
msgstr ""

#: ../source/reference/pragmas.rst:90
#: 2137ddb34e5848dc84ca9d5f403c2e01
msgid "``%name``"
msgstr ""

#: ../source/reference/pragmas.rst:92
#: 0e9bcf6426e04728a3198de4c5474a1b
msgid "Give the compiler some suggested names to use for a particular type when it is asked to generate names for values. You can specify any number of suggested names; they will be used in-order when more than one is needed for a single definition."
msgstr ""
