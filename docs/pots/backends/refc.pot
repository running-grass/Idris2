# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-23 12:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/backends/refc.rst:3
#: d45e120ba7e9487db62811cadd95b734
msgid "C with Reference Counting"
msgstr ""

#: ../source/backends/refc.rst:5
#: 848c2b466e6d4eb5a899e91b39f51160
msgid "There is an experimental code generator which compiles to an executable via C, using a reference counting garbage collector. This is intended as a lightweight (i.e. minimal dependencies) code generator that can be ported to multiple platforms, especially those with memory constraints."
msgstr ""

#: ../source/backends/refc.rst:10
#: 9474c8f7c40e41659245e0b43891edf1
msgid "Performance is not as good as the Scheme based code generators, partly because the reference counting has not yet had any optimisation, and partly because of the limitations of C. However, the main goal is portability: the generated code should run on any platform that supports a C compiler."
msgstr ""

#: ../source/backends/refc.rst:15
#: 467d0bfdea744d628d96e28e14233ec2
msgid "This code generator can be accessed via the REPL command:"
msgstr ""

#: ../source/backends/refc.rst:21
#: 78e26768a3d44072b23a0513a3f0163c
msgid "Alternatively, you can set it via the ``IDRIS2_CG`` environment variable:"
msgstr ""

#: ../source/backends/refc.rst:27
#: 4541c4b167fe486ca2195ae6a3c5d191
msgid "The C compiler it invokes is determined by either the ``IDRIS2_CC`` or ``CC`` environment variables. If neither is set, it uses ``cc``."
msgstr ""

#: ../source/backends/refc.rst:30
#: c8f24f053a3e480d928c1004dfa075b6
msgid "This code generator does not yet support `:exec`, just `:c`."
msgstr ""

#: ../source/backends/refc.rst:32
#: 49fbe4d1ceb644b6b2519ec086196d8b
msgid "Also note that, if you link with any dynamic libraries for interfacing with C, you will need to arrange for them to be accessible via ``LD_LIBRARY_PATH`` when running the executable. The default Idris 2 support libraries are statically linked."
msgstr ""

#: ../source/backends/refc.rst:38
#: ce67966969974baa99dde0deeda8efc7
msgid "Extending RefC"
msgstr ""

#: ../source/backends/refc.rst:40
#: c9256397244449c6be05be9d3821099b
msgid "RefC can be extended to produce a new backend for languages that support C foreign functions. For example, a `Python backend for Idris <https://github.com/madman-bob/idris2-python>`_."
msgstr ""

#: ../source/backends/refc.rst:44
#: 21023ca6d84545dcaa0d91e4dd120385
msgid "In your backend, use the ``Compiler.RefC`` functions ``generateCSourceFile``, ``compileCObjectFile {asLibrary = True}``, and ``compileCFile {asShared = True}`` to generate a ``.so`` shared object file."
msgstr ""

#: ../source/backends/refc.rst:54
#: 9f8e48d2434c4ea3a4df213daf2faaba
msgid "To run a compiled Idris program, call the ``int main(int argc, char *argv[])`` function in the compiled ``.so`` file, with the arguments you wish to pass to the running program."
msgstr ""

#: ../source/backends/refc.rst:58
#: 9e610bef1b2243fe91b0a08564de4616
msgid "For example, in Python:"
msgstr ""

#: ../source/backends/refc.rst:72
#: 92f82897480c4e228695e2efef6f1557
msgid "Extending RefC FFIs"
msgstr ""

#: ../source/backends/refc.rst:74
#: 95ea2e626722447da3dd207765973161
msgid "To make the generated C code recognize additional FFI languages beyond the standard RefC FFIs, pass the ``additionalFFILangs`` option to ``generateCSourceFile``, with a list of the language identifiers your backend recognizes."
msgstr ""

#: ../source/backends/refc.rst:83
#: 0b7a0c11fb844985b998f7ebbe043e48
msgid "This will generate stub FFI function pointers in the generated C file, which your backend should set to the appropriate C functions before ``main`` is called."
msgstr ""

#: ../source/backends/refc.rst:87
#: cb12dd9dae9746028a18c241d288587d
msgid "Each ``%foreign \"lang: foreignFuncName, opts\"`` definition for a function will produce a stub, of the appropriate function pointer type. This stub will be called ``cName $ NS (mkNamespace lang) funcName``, where ``funcName`` is the fully qualified Idris name of that function."
msgstr ""

#: ../source/backends/refc.rst:92
#: 2464c6b6e24e4b63bbbf090c6c6a2e6e
msgid "So the ``%foreign`` function"
msgstr ""

#: ../source/backends/refc.rst:99
#: bbe145654b144508b9f3b7703ee60972
msgid "produces a stub ``python_Main_abs``, which can be backpatched in Python by:"
msgstr ""
