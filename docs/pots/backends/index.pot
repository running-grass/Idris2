# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-23 12:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/backends/index.rst:5
#: 327c000e14aa41959cd0c69a18030f02
msgid "Compiling to Executables"
msgstr ""

#: ../source/backends/index.rst:9
#: 4f350ae357334d99a5741082ee146100
msgid "The documentation for Idris has been published under the Creative Commons CC0 License. As such to the extent possible under law, *The Idris Community* has waived all copyright and related or neighboring rights to Documentation for Idris."
msgstr ""

#: ../source/backends/index.rst:14
#: b82b65b7b00d45989da7103a23136c97
msgid "More information concerning the CC0 can be found online at: http://creativecommons.org/publicdomain/zero/1.0/"
msgstr ""

#: ../source/backends/index.rst:16
#: 575ebee2cf01454784d4bd4d26487033
msgid "Idris 2 (the language) is designed to be independent of any specific code generator. Still, since the point of writing a program is to be able to run it, it's important to know how to do so! By default, Idris compiles to executables via `Chez Scheme <https://www.scheme.com/>`_."
msgstr ""

#: ../source/backends/index.rst:21
#: e45780a0dd4a4fb9b23ac6a94d762de5
msgid "You can compile to an executable as follows, at the REPL:"
msgstr ""

#: ../source/backends/index.rst:27
#: 21f7a87101334680a167195aeab7169c
msgid "...where ``execname`` is the name of the executable file to generate, and ``expr`` is the Idris expression which will be executed. ``expr`` must have type ``IO ()``. This will result in an executable file ``execname``, in a directory ``build/exec``, relative to the current working directory."
msgstr ""

#: ../source/backends/index.rst:32
#: 99e569bd2d144004b85d361e2e494261
msgid "You can also execute expressions directly:"
msgstr ""

#: ../source/backends/index.rst:38
#: 71dae7a955014a1a9f379c3beeb828c7
msgid "Again, ``expr`` must have type ``IO ()``."
msgstr ""

#: ../source/backends/index.rst:40
#: 410ec94cb8bf4cb6b8570c71b9b2dd6b
msgid "Finally, you can compile to an executable from the command line by adding the ``-o <output file>`` option:"
msgstr ""

#: ../source/backends/index.rst:47
#: a8bf60db89114604ae6db095acc37adf
msgid "This will compile the expression ``Main.main``, generating an executable ``hello`` (with an extension depending on the code generator) in the ``build/exec`` directory."
msgstr ""

#: ../source/backends/index.rst:51
#: b38bbe3bfa7f4da8a10b6986812040c3
msgid "By default, Idris 2 is a whole program compiler - that is, it finds all the necessary function definitions and compiles them only when you build an executable. This gives plenty of optimisation opportunities, but can also be slow for rebuilding. However, if the backend supports it, you can build modules and executables *incrementally*:"
msgstr ""

#: ../source/backends/index.rst:62
#: a49dc8def238491da52a40245b461cac
msgid "If the backend supports it, you can generate profiling data by setting the ``profile`` flag, either by starting Idris with ``--profile``, or running ``:set profile`` at the REPL. The profile data generated will depend on the back end you are using. Currently, the Chez and Racket back ends support generating profile data."
msgstr ""

#: ../source/backends/index.rst:68
#: 2d139d377e7b40c58fd5dec4d8eb5dfa
msgid "There are five code generators provided in Idris 2, and there is a system for plugging in new code generators for a variety of targets. The default is to compile via Chez Scheme, with an alternative via Racket or Gambit. You can set the code generator at the REPL with the `:set codegen` command, or via the `IDRIS2_CG` environment variable."
msgstr ""

#: ../source/backends/index.rst:85
#: 282c18615d2f49e79fa1128ca53d9c53
msgid "There are also external code generators that aren't part of the main Idris 2 repository and can be found on Idris 2 wiki:"
msgstr ""

#: ../source/backends/index.rst:88
#: 5ee0cd8687554b22987b86988862e902
msgid "`External backends <https://github.com/idris-lang/Idris2/wiki/1-%5BLanguage%5D-External-backends>`_"
msgstr ""

#: ../source/backends/index.rst:90
#: 12932ada2df5408bbece1ec28e7448d8
msgid "There is work in progress support for generating libraries for other languages from idris2 code."
msgstr ""
