# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-23 12:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/backends/chez.rst:3
#: d8587a2f41c446d68a0c052c88e30963
msgid "Chez Scheme Code Generator"
msgstr ""

#: ../source/backends/chez.rst:5
#: 88648da038d54933ba17ff4c3e7919ed
msgid "The Chez Scheme code generator is the default, or it can be accessed via a REPL command:"
msgstr ""

#: ../source/backends/chez.rst:12
#: 7e30189f86e54ed694164f1e77e63b4f
msgid "By default, therefore, to run Idris programs you will need to install `Chez Scheme <https://www.scheme.com/>`_. Chez Scheme is open source, and available via most OS package managers."
msgstr ""

#: ../source/backends/chez.rst:16
#: 904cb5801cb3455dbdff51fe8dbd9bc7
msgid "You can compile an expression ``expr`` of type ``IO ()`` to an executable as follows, at the REPL:"
msgstr ""

#: ../source/backends/chez.rst:23
#: 13b95be44de24399a5b6c77a0a59d6cb
msgid "...where ``execname`` is the name of the executable file. This will generate the following:"
msgstr ""

#: ../source/backends/chez.rst:26
#: e52decc1787a4f3199490c23ac2335ae
msgid "A shell script ``build/exec/execname`` which invokes the program"
msgstr ""

#: ../source/backends/chez.rst:27
#: 5b2d2723b7a34e6ca50ea0eb57200335
msgid "A subdirectory ``build/exec/execname_app`` which contains all the data necessary to run the program. This includes the Chez Scheme source (``execname.ss``), the compiled Chez Scheme code (``execname.so``) and any shared libraries needed for foreign function definitions."
msgstr ""

#: ../source/backends/chez.rst:32
#: c4b306bb15624396adc10632e6fa56bf
msgid "The executable ``execname`` is relocatable to any subdirectory, provided that ``execname_app`` is also in the same subdirectory."
msgstr ""

#: ../source/backends/chez.rst:35
#: 03e83a8e65974086aeb41c1fe7ed0afa
msgid "You can also execute an expression directly:"
msgstr ""

#: ../source/backends/chez.rst:41
#: f4bc1ed0373e492b8c6ca766d82abdcb
msgid "Again, ``expr`` must have type ``IO ()``. This will generate a temporary executable script ``_tmpchez`` in the ``build/exec`` directory, and execute that."
msgstr ""

#: ../source/backends/chez.rst:45
#: 48ea61545e18476aa320b292866e38ba
msgid "Chez Scheme is the default code generator, so if you invoke ``idris2`` with the ``-o execname`` flag, it will generate an executable script ``build/exec/execname``, again with support files in ``build/exec/execname_app``."
msgstr ""

#: ../source/backends/chez.rst:51
#: 8df2ff6c7bb84b2d8bc827785eca5650
msgid "Chez Directives"
msgstr ""

#: ../source/backends/chez.rst:53
#: fa3e5bb3d55e487cb48cfcb7ceedd519
msgid "``--directive extraRuntime=<path>``"
msgstr ""

#: ../source/backends/chez.rst:55
#: 0dcca7eb4b314393be3cac1bd6a634ab
msgid "Embed Scheme source from ``<path>`` directly into generated output. Can be specified more than once, in which case all given files will be included in the order specified."
msgstr ""

#: ../source/backends/chez.rst:76
#: fb8e8405689e42a6a8e6a31df0c99d10
msgid "Making a freestanding executable"
msgstr ""

#: ../source/backends/chez.rst:78
#: 755112e7013a4b41a1222b79d8cdf85d
msgid "It's possible to embed the Chez Scheme system and the built Idris2 program into a freestanding executable with `chez-exe <https://github.com/gwatt/chez-exe>`_."
msgstr ""

#: ../source/backends/chez.rst:80
#: 03b51f3b43a2405bb3f26c00c8045306
msgid "Build and install the ``compile-chez-program-tool`` by running the configuration script and then make:"
msgstr ""

#: ../source/backends/chez.rst:87
#: c2ae613ad79a48908400267e4a0cfd86
msgid "where ``<bootpath`` is the path to where the Chez Scheme bootfiles (``petite.boot`` and ``scheme.boot``) and ``scheme.h`` are. More configuration is described in the chez-exe installation instructions."
msgstr ""

#: ../source/backends/chez.rst:90
#: ef3e3a216f164e46ad6bbef863cf2938
msgid "Invoke ``compile-chez-program``:"
msgstr ""

#: ../source/backends/chez.rst:96
#: 502f24e73b0d481f8dfda342d1cd2c92
msgid "Note that it can only use the ``.ss``-file and not the ``.so``-file. To embed the full Chez Scheme system including the compiler add the ``--full-chez`` option."
msgstr ""

#: ../source/backends/chez.rst:99
#: cb751866dd774dda97247b40199ea345
msgid "The finished executable still requires the libidris_support shared library. It's possible to also eliminate that dependency by linking with it statically."
msgstr ""
