# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: 2022-07-13 15:22+0000\n"
"Language-Team: Chinese Simplified (https://www.transifex.com/idriszhong-wen/teams/140912/zh-Hans/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh-Hans\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/tutorial/starting.rst:5 56ede7444c7a4132bb95c6eb5444d935
msgid "Getting Started"
msgstr ""

#: ../../source/tutorial/starting.rst:8 e7b309b3eaca43bf8dac2a610efd176d
msgid "Installing from Source"
msgstr ""

#: ../../source/tutorial/starting.rst:16 642e8e24de4248c1b6fc2cbcbc3a71e3
msgid "Prerequisites"
msgstr ""

#: ../../source/tutorial/starting.rst:18 abbf1c8b46f54c08bfae95fc89ec7424
msgid ""
"Idris 2 is implemented in Idris 2 itself, so to bootstrap it you can build "
"from generated Scheme sources. To do this, you need either Chez Scheme "
"(default, and currently preferred since it is the fastest) or Racket. You "
"can get one of these from:"
msgstr ""

#: ../../source/tutorial/starting.rst:23 630a2047ee5f4f54811209c965c729d0
msgid "`Chez Scheme <https://cisco.github.io/ChezScheme/>`_"
msgstr ""

#: ../../source/tutorial/starting.rst:24 0290c94828d143e498c550edb8e6b324
msgid "`Racket <https://download.racket-lang.org/>`_"
msgstr ""

#: ../../source/tutorial/starting.rst:26 7bb47c4833164c8bad1a0dfb7984952e
msgid ""
"Both are also available from MacPorts/Homebrew and all major Linux "
"distributions. Windows requires some further prerequisites, see "
":ref:`windows-install`."
msgstr ""

#: ../../source/tutorial/starting.rst:29 13c134449c944035bfa7f693d38aa3c3
msgid ""
"**Note**: If you install Chez Scheme from source files, building it locally,"
" make sure you run ``./configure --threads`` to build multithreading support"
" in."
msgstr ""

#: ../../source/tutorial/starting.rst:33 d5568c5b59e94f10a049496ae647dadd
msgid "Downloading and Installing"
msgstr ""

#: ../../source/tutorial/starting.rst:35 9b60e751fd0d4b6490cf7cc7677c6f8a
msgid ""
"You can download the Idris 2 source from the `Idris web site "
"<https://www.idris-lang.org/pages/download.html>`_ or get the latest "
"development version from `idris-lang/Idris2 <https://github.com/idris-"
"lang/Idris2>`_ on Github.  This includes the Idris 2 source code and the "
"Scheme code generated from that.  Once you have unpacked the source, you can"
" install it as follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:44 e7a4acf95b1a4c7abc26c4d699f23403
msgid ""
"Where `chez` is the executable name of the Chez Scheme compiler. This will "
"vary from system to system, but is often one of ``scheme``, ``chezscheme``, "
"or ``chezscheme9.5``. If you are building via Racket, you can install it as "
"follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:51 7b80e1753bb7496980568617a38aeee5
msgid ""
"Once you've successfully bootstrapped with any of the above commands, you "
"can install with the command ``make install``.  This will, by default, "
"install into ``${HOME}/.idris2``. You can change this by editing the options"
" in ``config.mk``. For example, to install into ``/usr/local``, you can edit"
" the ``IDRIS2_PREFIX`` as follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:60 fbffa663acc0436e8afe96e028e97df9
msgid "Installing from a Package Manager"
msgstr ""

#: ../../source/tutorial/starting.rst:63 15eecddb6d7b4cdcb9681afdf8f254f8
msgid "Installing Using Homebrew"
msgstr ""

#: ../../source/tutorial/starting.rst:65 9a6ab23a70c845a58c04c29d9f33bbb8
msgid ""
"If you are Homebrew user you can install Idris 2 together with all the "
"requirements by running following command::"
msgstr ""

#: ../../source/tutorial/starting.rst:71 aa79d9de3d0c46678c4b5e462ca4871e
msgid "Checking Installation"
msgstr ""

#: ../../source/tutorial/starting.rst:73 bcbb9f81724448939e0bc75cc82f1a8b
msgid ""
"To check that installation has succeeded, and to write your first Idris "
"program, create a file called ``hello.idr`` containing the following text:"
msgstr ""

#: ../../source/tutorial/starting.rst:84 dd7f7f146cfb47f1823b2df94d0042ab
msgid ""
"If you are familiar with Haskell, it should be fairly clear what the program"
" is doing and how it works, but if not, we will explain the details later. "
"You can compile the program to an executable by entering ``idris2 hello.idr "
"-o hello`` at the shell prompt. This will, by default, create an executable "
"called ``hello``, which invokes a generated and compiled Chez Scheme "
"program, in the destination directory ``build/exec`` which you can run:"
msgstr ""

#: ../../source/tutorial/starting.rst:98 e0a1cb388b684e0592e3291fe824f24b
msgid ""
"Please note that the dollar sign ``$`` indicates the shell prompt! Some "
"useful options to the Idris command are:"
msgstr ""

#: ../../source/tutorial/starting.rst:101 8f83c22f45a440fcb81f409ee2a45b3f
msgid "``-o prog`` to compile to an executable called ``prog``."
msgstr ""

#: ../../source/tutorial/starting.rst:103 3cdda8737e3e4921b7af45c04762ac31
msgid ""
"``--check`` type check the file and its dependencies without starting the "
"interactive environment."
msgstr ""

#: ../../source/tutorial/starting.rst:105 563c93150a7a47628ef8db60b23dc39e
msgid ""
"``--package pkg`` add package as dependency, e.g. ``--package contrib`` to "
"make use of the contrib package."
msgstr ""

#: ../../source/tutorial/starting.rst:107 ccd480acce884184b401900900ab0a52
msgid "``--help`` display usage summary and command line options."
msgstr ""

#: ../../source/tutorial/starting.rst:109 f3aaa5961e30448f846221dfa6335994
msgid ""
"You can find out more about compiling to executables in Section :ref:`sect-"
"execs`."
msgstr ""

#: ../../source/tutorial/starting.rst:113 d900f11b86a74d46bacedf0e277742ab
msgid "The Interactive Environment"
msgstr ""

#: ../../source/tutorial/starting.rst:115 d53487f94afe49b7a56b13e2f4c98cf5
msgid ""
"Entering ``idris2`` at the shell prompt starts up the interactive "
"environment. You should see something like the following:"
msgstr ""

#: ../../source/tutorial/starting.rst:120 71f0a10adcb94de191dd27d226150d1b
msgid ""
"This gives a ``ghci`` style interface which allows evaluation of, as well as"
" type checking of, expressions; theorem proving, compilation; editing; and "
"various other operations. The command ``:?`` gives a list of supported "
"commands. Below, we see an example run in which ``hello.idr`` is loaded, the"
" type of ``main`` is checked and then the program is compiled to the "
"executable file ``hello``, available in the destination directory "
"``build/exec/``. Type checking a file, if successful, creates a bytecode "
"version of the file (in this case ``build/ttc/hello.ttc``) to speed up "
"loading in future. The bytecode is regenerated if the source file changes."
msgstr ""
