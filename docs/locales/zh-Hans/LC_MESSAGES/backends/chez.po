# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: 2022-07-13 15:23+0000\n"
"Language-Team: Chinese Simplified (https://www.transifex.com/idriszhong-wen/teams/140912/zh-Hans/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh-Hans\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/backends/chez.rst:3 031df179d38d4bf78b60c1efeef7bc1d
msgid "Chez Scheme Code Generator"
msgstr ""

#: ../../source/backends/chez.rst:5 68e22470735d433baa93b8eda6f06fd1
msgid ""
"The Chez Scheme code generator is the default, or it can be accessed via a "
"REPL command:"
msgstr ""

#: ../../source/backends/chez.rst:12 0dd31067e2a644f887013bb78b1d8da8
msgid ""
"By default, therefore, to run Idris programs you will need to install `Chez "
"Scheme <https://www.scheme.com/>`_. Chez Scheme is open source, and "
"available via most OS package managers."
msgstr ""

#: ../../source/backends/chez.rst:16 46fc5437caa8498689ab6b9216809f95
msgid ""
"You can compile an expression ``expr`` of type ``IO ()`` to an executable as"
" follows, at the REPL:"
msgstr ""

#: ../../source/backends/chez.rst:23 ea42b95730204567ad278936f30288f6
msgid ""
"...where ``execname`` is the name of the executable file. This will generate"
" the following:"
msgstr ""

#: ../../source/backends/chez.rst:26 35c55ad79d9942e6bbacc9f7e10a9752
msgid "A shell script ``build/exec/execname`` which invokes the program"
msgstr ""

#: ../../source/backends/chez.rst:27 551bed13ae73406a83bfb41fbd1b23b9
msgid ""
"A subdirectory ``build/exec/execname_app`` which contains all the data "
"necessary to run the program. This includes the Chez Scheme source "
"(``execname.ss``), the compiled Chez Scheme code (``execname.so``) and any "
"shared libraries needed for foreign function definitions."
msgstr ""

#: ../../source/backends/chez.rst:32 8dda3ec059bc4eb3b83faf3a4638340c
msgid ""
"The executable ``execname`` is relocatable to any subdirectory, provided "
"that ``execname_app`` is also in the same subdirectory."
msgstr ""

#: ../../source/backends/chez.rst:35 3b99a2f1c4af4c889e2b22d6075e0a5f
msgid "You can also execute an expression directly:"
msgstr ""

#: ../../source/backends/chez.rst:41 1f79591c812f407aabd77f2c6b1073e7
msgid ""
"Again, ``expr`` must have type ``IO ()``. This will generate a temporary "
"executable script ``_tmpchez`` in the ``build/exec`` directory, and execute "
"that."
msgstr ""

#: ../../source/backends/chez.rst:45 956e16790c9d46bc86f218d18116b730
msgid ""
"Chez Scheme is the default code generator, so if you invoke ``idris2`` with "
"the ``-o execname`` flag, it will generate an executable script "
"``build/exec/execname``, again with support files in "
"``build/exec/execname_app``."
msgstr ""

#: ../../source/backends/chez.rst:51 f9a98275862a449bb841b93003cc2ed9
msgid "Chez Directives"
msgstr ""

#: ../../source/backends/chez.rst:53 386337eaed2d456690862b41fe0e59f8
msgid "``--directive extraRuntime=<path>``"
msgstr ""

#: ../../source/backends/chez.rst:55 61434afb69b442dea22cc1665340e500
msgid ""
"Embed Scheme source from ``<path>`` directly into generated output. Can be "
"specified more than once, in which case all given files will be included in "
"the order specified."
msgstr ""

#: ../../source/backends/chez.rst:76 63865231998945b69cdb7d4f170bff56
msgid "Making a freestanding executable"
msgstr ""

#: ../../source/backends/chez.rst:78 0cab716a44b34d67b2d147c1d5af50b5
msgid ""
"It's possible to embed the Chez Scheme system and the built Idris2 program "
"into a freestanding executable with `chez-exe "
"<https://github.com/gwatt/chez-exe>`_."
msgstr ""

#: ../../source/backends/chez.rst:80 9a98b2c9ff1a443cac6e238e932f3445
msgid ""
"Build and install the ``compile-chez-program-tool`` by running the "
"configuration script and then make:"
msgstr ""

#: ../../source/backends/chez.rst:87 9c12d28d66d049ba94738d966cb13fdd
msgid ""
"where ``<bootpath`` is the path to where the Chez Scheme bootfiles "
"(``petite.boot`` and ``scheme.boot``) and ``scheme.h`` are. More "
"configuration is described in the chez-exe installation instructions."
msgstr ""

#: ../../source/backends/chez.rst:90 9aa394ad4dad4746bcfa26caeced49eb
msgid "Invoke ``compile-chez-program``:"
msgstr ""

#: ../../source/backends/chez.rst:96 07af1e01e5704f87a3232ea2159bb2d5
msgid ""
"Note that it can only use the ``.ss``-file and not the ``.so``-file. To "
"embed the full Chez Scheme system including the compiler add the ``--full-"
"chez`` option."
msgstr ""

#: ../../source/backends/chez.rst:99 07eae07f07e945ee98023649941271ce
msgid ""
"The finished executable still requires the libidris_support shared library. "
"It's possible to also eliminate that dependency by linking with it "
"statically."
msgstr ""
