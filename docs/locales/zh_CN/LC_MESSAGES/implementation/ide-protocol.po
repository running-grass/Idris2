# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-23 12:38+0800\n"
"PO-Revision-Date: 2022-08-17 05:54+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://weblate.grass.work:30443/"
"projects/idris2/implementationide-protocol/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.13.1\n"
"Generated-By: Babel 2.10.3\n"

#: ../source/implementation/ide-protocol.rst:3 86e155058b9e432e895855e4ca4a5670
msgid "The IDE Protocol"
msgstr ""

#: ../source/implementation/ide-protocol.rst:5 a4d990ef55934f0bab92e6d983062f36
msgid ""
"The Idris REPL has two modes of interaction: a human-readable syntax "
"designed for direct use in a terminal, and a machine-readable syntax "
"designed for using Idris as a backend for external tools."
msgstr ""

#: ../source/implementation/ide-protocol.rst:7 010da84c72804242ab42e65892ff2033
msgid ""
"The IDE-Protocol is versioned separately from the Idris compiler. The "
"first version of Idris (written in Haskell and is at v1.3.3) implements "
"version one of the IDE Protocol, and Idris2 (self-hosting and is at "
"v.0.3.0) implements version two of the IDE Protocol."
msgstr ""

#: ../source/implementation/ide-protocol.rst:10
#: 4285201f8d234835abd8bdfa189b2574
msgid ""
"The protocol and its serialisation/deserialisation routines are part of "
"the `Protocol` submodule hierarchy and are packaged in the "
"`idris2protocols.ipkg` package."
msgstr ""

#: ../source/implementation/ide-protocol.rst:13
#: 154663f6e08d4cec8ed0e4b46f4ac6d1
msgid "Starting IDE Mode"
msgstr ""

#: ../source/implementation/ide-protocol.rst:15
#: d1ad2f58c55c4bb98f99a1bec7031985
msgid ""
"To initiate the IDE-Protocol on stdin/stdout, use the ``--ide-mode`` "
"command line option. To run the protocol over a TCP socket, use the "
"``--ide-mode-socket`` option: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:21
#: 874c442f42be40d7bb3f73412c106ce4
msgid ""
"By default this will chose an open port, print the number of the port to "
"stdout followed by a newline, and listen to that socket on localhost. You"
" may optionally specify the hostname and port to listen to: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:27
#: 5a928847e18941faad54ceb85d53381b
msgid ""
"The IDE-Protocol will run on that socket, and Idris will exit when the "
"client disconnects from the socket."
msgstr ""

#: ../source/implementation/ide-protocol.rst:31
#: be727796c72343c78603f11c81ad208c
msgid "Protocol Overview"
msgstr ""

#: ../source/implementation/ide-protocol.rst:33
#: 9f9f84b0ed3d4de5ab90c7d1aeb6f335
msgid ""
"The communication protocol is of asynchronous request-reply style: a "
"single request from the client is handled by Idris at a time. Idris waits"
" for a request on its standard input stream, and outputs the answer or "
"answers to standard output. The result of a request can be either "
"success, failure, or intermediate output; and furthermore, before the "
"result is delivered, there might be additional meta-messages."
msgstr ""

#: ../source/implementation/ide-protocol.rst:38
#: b97431d78f004eccadd5bf1d0ffbe157
msgid ""
"A reply can consist of multiple messages: any number of messages to "
"inform the user about the progress of the request or other informational "
"output, and finally a result, either ``ok`` or ``error``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:40
#: 42767dd350da4adabc2772d091d07b40
msgid ""
"The wire format is the length of the message in characters, encoded in 6 "
"characters hexadecimal, followed by the message encoded as S-expression "
"(sexp). Additionally, each request includes a unique integer (counting "
"upwards), which is repeated in all messages corresponding to that "
"request."
msgstr ""

#: ../source/implementation/ide-protocol.rst:43
#: 2fa609129f514a6494308414bcde174d
msgid ""
"An example interaction from loading the file ``/home/hannes/empty.idr`` "
"looks as follows on the wire: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:51
#: c57236153d714d7a8d389e0a3df5bcd3
msgid ""
"The first message is the request from idris-mode to load the specific "
"file, which length is hex 2a, decimal 42 (including the newline at the "
"end). The request identifier is set to 1. The first message from Idris is"
" to write the string ``Type checking /home/hannes/empty.idr``, another is"
" to set the prompt to ``*/home/hannes/empty``. The answer, starting with "
"``:return`` is ``ok``, and additional information is that the file was "
"loaded."
msgstr ""

#: ../source/implementation/ide-protocol.rst:56
#: 5acd9ba6de394beaa3cb853f20669b10
msgid ""
"There are three atoms in the wire language: numbers, strings, and "
"symbols. The only compound object is a list, which is surrounded by "
"parenthesis. The syntax is::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:63
#: 563b7328b5704b308c0dfc30debdd55b
msgid ""
"where ``NUM`` is either 0 or a positive integer, ``ALPHA`` is an "
"alphabetical character, and ``STR`` is the contents of a string, with "
"``\"`` escaped by a backslash. The atom ``nil`` is accepted instead of "
"``()`` for compatibility with some regexp pretty-printing routines."
msgstr ""

#: ../source/implementation/ide-protocol.rst:66
#: 570f1c5f03824c17b288e87808df0f7d
msgid ""
"The state of the Idris process is mainly the active file, which needs to "
"be kept synchronised between the editor and Idris. This is achieved by "
"the already seen ``:load-file`` command."
msgstr ""

#: ../source/implementation/ide-protocol.rst:70
#: a8fadd22252f4def861f42a227309d77
msgid "Protocol Versioning"
msgstr ""

#: ../source/implementation/ide-protocol.rst:72
#: 67b73e2c5e4245ba873acb50481b2f50
msgid ""
"When interacting with Idris through the IDE Protocol the initial message "
"sent by the running Idris Process is the version (major and minor) of the"
" IDE Protocol being used."
msgstr ""

#: ../source/implementation/ide-protocol.rst:74
#: afbb1aa381614f449433864df1bc8779
msgid "The expected message has the following format:"
msgstr ""

#: ../source/implementation/ide-protocol.rst:76
#: 1da61c7d30c848ddbdd4440ab9345180
msgid "``(:protocol-version MAJOR MINOR)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:78
#: 0615c4588e584bc8825e8ca20812e613
msgid "IDE Clients can use this to help support multiple Idris versions."
msgstr ""

#: ../source/implementation/ide-protocol.rst:81
#: 012d21a6af604e28880b47889580c8b0
msgid "Commands"
msgstr ""

#: ../source/implementation/ide-protocol.rst:83
#: f4c635441a144fa1994c23d83df0f16b
msgid ""
"The available commands are listed below. They are compatible with Version"
" 1 and 2.0 of the protocol unless otherwise stated."
msgstr ""

#: ../source/implementation/ide-protocol.rst:88
#: d5f201b763a54c7bbe6fb96dd1a7cfcf
msgid "``(:load-file FILENAME [LINE])``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:87
#: 4ba0378e09fd43519f179f2024a3cf93
msgid ""
"Load the named file.  If a ``LINE`` number is provided, the file is only "
"loaded up to that line.  Otherwise, the entire file is loaded. Version 2 "
"of the IDE Protocol requires that the file name be a quoted string, as in"
" ``(:load-file \"MyFile.idr\")`` and not ``(:load-file MyFile.idr)``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:92
#: 5e8b654422b24c51b322df21953ec3dd
msgid "``(:cd FILEPATH)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:91
#: ef0e8c38a327401b93ae67767f3af5e5
msgid ""
"Change the working direction to the given ``FILEPATH``. Version 2 of the "
"IDE Protocol requires that the path is quoted, as in ``(:cd \"a/b/c\")`` "
"and not ``(:cd a/b/c)``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:95
#: 896f492304c44d39953c08ba4a7712c7
msgid "``(:interpret STRING)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:95
#: 175e57171b0a470882b9b3f349bfd027
msgid "Interpret ``STRING`` at the Idris REPL, returning a highlighted result."
msgstr ""

#: ../source/implementation/ide-protocol.rst:99
#: ce256eadbf8949199baf73d09ef993af
msgid "``(:type-of STRING)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:98
#: 7ffeccc6ddde4585abf2e89080d12de9
msgid ""
"Return the type of the name, written with Idris syntax in the ``STRING``."
" The reply may contain highlighting information."
msgstr ""

#: ../source/implementation/ide-protocol.rst:103
#: 75f595486a7b4c998dbdbec5c4d38f68
msgid "``(:case-split LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:102
#: f1b91486f387401683a2e72cb9aa83b8
msgid ""
"Generate a case-split for the pattern variable ``NAME`` on program line "
"``LINE``. The pattern-match cases to be substituted are returned as a "
"string with no highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:107
#: d4314d63c6014b629e302b18d2f9919f
msgid "``(:add-clause LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:106
#: 668f20d349d1486dab0fd315368aa3a5
msgid ""
"Generate an initial pattern-match clause for the function declared as "
"``NAME`` on program line ``LINE``. The initial clause is returned as a "
"string with no highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:110
#: 1d91e6ed5b70493c9321f885dbdf2ff9
msgid "``(:add-proof-clause LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:110
#: a18f1627ea9a48e88c6224471583fcfb
msgid "Add a clause driven by the ``<==`` syntax."
msgstr ""

#: ../source/implementation/ide-protocol.rst:114
#: 2e6750835868438e9b7a244f90879adc
msgid "``(:add-missing LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:113
#: f468544d0a494db290f3ac190cbbe4e1
msgid ""
"Add the missing cases discovered by totality checking the function "
"declared as ``NAME`` on program line ``LINE``. The missing clauses are "
"returned as a string with no highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:118
#: 79e2a494065c440e8b46d4c903dd1dcd
msgid "``(:make-with LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:117
#: d9ace0c3978f4920989641b6d2d655ac
msgid ""
"Create a with-rule pattern match template for the clause of function "
"``NAME`` on line ``LINE``. The new code is returned with no highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:122
#: 87aa670fdf134db7bdd70af2d46ebc53
msgid "``(:make-case LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:121
#: 409a638bceed4549aa7245faf6f5164f
msgid ""
"Create a case pattern match template for the clause of function ``NAME`` "
"on line ``LINE``. The new code is returned with no highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:125
#: bc37cf8b68a242f6a914fc93ca5f51a9
msgid "``(:make-lemma LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:125
#: c33d581e82e342ccb8cee429b5ab7327
msgid ""
"Create a top level function with a type which solves the hole named "
"``NAME`` on line ``LINE``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:130
#: 00369462523e48f7bec56d07ecebdc77
msgid "``(:proof-search LINE NAME HINTS)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:128
#: b34aa351a16a45cbafdc66d8712e14a0
msgid ""
"Attempt to fill out the hole on ``LINE`` named ``NAME`` by proof search. "
"``HINTS`` is a possibly-empty list of additional things to try while "
"searching. This operation is also called ``ExprSearch`` in the Idris 2 "
"API."
msgstr ""

#: ../source/implementation/ide-protocol.rst:133
#: 5774234c5bd946b19fabb5c68d1426ec
msgid "``(:refine LINE NAME TM)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:133
#: 7368b112edd84889ae3635acc9d4a630
msgid "Refine the hole on ``LINE`` named ``NAME`` by using the term ``TM``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:138
#: 55a5c1c3bfee4086a722cfc373d08309
msgid "``(:docs-for NAME [MODE])``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:136
#: 9d1bcdf746554098a3318eef896796a7
msgid ""
"Look up the documentation for ``NAME``, and return it as a highlighted "
"string. If ``MODE`` is ``:overview``, only the first paragraph of "
"documentation is provided for ``NAME``. If ``MODE`` is ``:full``, or "
"omitted, the full documentation is returned for ``NAME``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:141
#: 9418bb825fbd4fc295ec4239b202ff10
msgid "``(:apropos STRING)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:141
#: ba0302558ecc402499bf30ee124616a8
msgid ""
"Search the documentation for mentions of ``STRING``, and return any found"
" as a list of highlighted strings."
msgstr ""

#: ../source/implementation/ide-protocol.rst:144
#: ec84edca6547471eb9525d295bb8f50e
msgid "``(:metavariables WIDTH)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:144
#: 7d35eeb08ca04f019a9e2b784b62eb84
msgid ""
"List the currently-active holes, with their types pretty-printed in "
"``WIDTH`` columns."
msgstr ""

#: ../source/implementation/ide-protocol.rst:147
#: ee286c3dcb07430f9e812ddeffe021d7
msgid "``(:who-calls NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:147
#: 2acf93eea14e445c804ceb1b76e51c05
msgid "Get a list of callers of ``NAME``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:150
#: 9878a38677c645649a2725256e4826a8
msgid "``(:calls-who NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:150
#: 334d2aba5fe048fb9dbd477058974cd1
msgid "Get a list of callees of ``NAME``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:153
#: f451724412034050bd8ca78a73c5f487
msgid "``(:browse-namespace NAMESPACE)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:153
#: 70d737b607954f93bc586b52849881db
msgid ""
"Return the contents of ``NAMESPACE``, like ``:browse`` at the command-"
"line REPL."
msgstr ""

#: ../source/implementation/ide-protocol.rst:156
#: 53c583a6ee284bf0b3bfdfceb93ae74d
msgid "``(:normalise-term TM)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:156
#: 9db6989ba9994e448abfee9886f3ba5d
msgid ""
"Return a highlighted string consisting of the results of normalising the "
"serialised term ``TM`` (which would previously have been sent as the "
"``tt-term`` property of a string)."
msgstr ""

#: ../source/implementation/ide-protocol.rst:160
#: 9e74cf1c4af44d89be7a5ff7aa8a7178
msgid "``(:show-term-implicits TM)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:159
#: 57d025b919af4f20a30c760fed2a351b
msgid ""
"Return a highlighted string, consisting of the results of making all "
"arguments in serialised term ``TM`` explicit. The arguments in ``TM`` "
"would previously have been sent as the ``tt-term`` property of a string."
msgstr ""

#: ../source/implementation/ide-protocol.rst:164
#: e4b278aea83f4d038a54ced709011527
msgid "``(:hide-term-implicits TM)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:163
#: c1284bc9542f43e49bda70ee4260f0ac
msgid ""
"Return a highlighted string, consisting of the results of making all "
"arguments in serialised term ``TM`` follow their usual implicitness "
"setting. The arguments in ``TM`` would previously have been sent as the "
"``tt-term`` property of a string."
msgstr ""

#: ../source/implementation/ide-protocol.rst:168
#: 16cde19db4ab4262aebf39d5beac34e8
msgid "``(:elaborate-term TM)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:167
#: 9e612bf8875244419194ebf5aa8f4574
msgid ""
"Return a highlighted string, consisting of the core language term "
"corresponding to serialised term ``TM``. The arguments in ``TM`` would "
"previously have been sent as the ``tt-term`` property of a string."
msgstr ""

#: ../source/implementation/ide-protocol.rst:171
#: 3f3d9c662fa84c948b0476c3a78feb7c
msgid "``(:print-definition NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:171
#: f9d8f98971654da387da360b786d2b0f
msgid "Return the definition of ``NAME`` as a highlighted string."
msgstr ""

#: ../source/implementation/ide-protocol.rst:174
#: 8a4e96398cdf42e7954a39767042c4c0
msgid "``(:repl-completions NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:174
#: f84f347f8873400aaff55d4bc5d7c1fe
msgid ""
"Search names, types and documentations which contain ``NAME``. Return the"
" result of tab-completing ``NAME`` as a REPL command."
msgstr ""

#: ../source/implementation/ide-protocol.rst:177
#: 34c8dc04ead546c3b4f5a7639c06745e
msgid "``:version``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:177
#: d839d04f4390442ca702faeeca415274
msgid "Return the version information of the Idris compiler."
msgstr ""

#: ../source/implementation/ide-protocol.rst:180
#: ac90f431b33949e2ac3075e3e5109f4f
msgid "New For Version 2"
msgstr ""

#: ../source/implementation/ide-protocol.rst:182
#: 8f7df86b34ec4730b22ae21229588ddf
msgid "New in Version 2 of the protocol are:"
msgstr ""

#: ../source/implementation/ide-protocol.rst:185
#: f563e652685b4a80aa7a3764ba6eb353
msgid "``(:generate-def LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:185
#: e9ab257462e54e1ab60a41886482598e
msgid "Attempt to generate a complete definition from a type."
msgstr ""

#: ../source/implementation/ide-protocol.rst:188
#: 4284dc65b7ea4cbd912e4171ddb0d639
msgid "``(:generate-def-next)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:188
#: fc67118c88bf43d7a9545052f63a2520
msgid ""
"Replace the previous generated definition with the next generated "
"definition."
msgstr ""

#: ../source/implementation/ide-protocol.rst:191
#: 0d1928207d764a1eb92482a3d99b8c18
msgid "``(:proof-search-next)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:191
#: 70963445050b468e94add304999caf6b
msgid ""
"Replace the previous proof search result with the next proof search "
"result."
msgstr ""

#: ../source/implementation/ide-protocol.rst:195
#: 2092238f8ccc4ea2852534a0e667993f
msgid "``(:intro LINE NAME)``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:194
#: 693cd180265640e98863aa463ccea2b1
msgid ""
"Returns the non-empty list of valid saturated constructors that can be "
"used in the hole at line ``LINE`` named ``NAME``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:198
#: 1c43b518e2454de4ae6ac4331c8430ba
msgid "Possible Replies"
msgstr ""

#: ../source/implementation/ide-protocol.rst:200
#: 1f5036752ef044cf862b6f16a6db2a4f
msgid "Possible replies include a normal final reply: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:205
#: a29eed7e195e47549a0e6a867acf7cda
msgid "A normal intermediate reply: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:210
#: 3246fe7f5c884caebaddaaf64719b156
msgid "Informational and/or abnormal replies: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:217
#: 7406839f0f374bdabac1807b2348a126
msgid "Warnings include compiler errors that don't cause the compiler to stop."
msgstr ""

#: ../source/implementation/ide-protocol.rst:220
#: ff9135bfd2464740be183cb5e0de66ae
msgid "Output Highlighting"
msgstr ""

#: ../source/implementation/ide-protocol.rst:222
#: 9cf08d66decc41569128d6552ec05179
msgid ""
"Idris mode supports highlighting the output from Idris. In reality, this "
"highlighting is controlled by the Idris compiler. Some of the return "
"forms from Idris support an optional extra parameter: a list mapping "
"spans of text to metadata about that text. Clients can then use this list"
" both to highlight the displayed output and to enable richer interaction "
"by having more metadata present. For example, the Emacs mode allows "
"right-clicking identifiers to get a menu with access to documentation and"
" type signatures."
msgstr ""

#: ../source/implementation/ide-protocol.rst:229
#: e8943d456657435d9257b900ceb01de7
msgid ""
"A particular semantic span is a three element list. The first element of "
"the list is the index at which the span begins, the second element is the"
" number of characters included in the span, and the third is the semantic"
" data itself. The semantic data is a list of lists. The head of each list"
" is a key that denotes what kind of metadata is in the list, and the tail"
" is the metadata itself."
msgstr ""

#: ../source/implementation/ide-protocol.rst:277
#: 2654d288de5543a0ab4c76423921075b
msgid "The following keys are available:"
msgstr ""

#: ../source/implementation/ide-protocol.rst:235
#: 0f11e813cecc4cf9b1c50c9234307620
#, fuzzy
msgid "``name``"
msgstr "``%name``"

#: ../source/implementation/ide-protocol.rst:236
#: d3986fbbb47b42cfb2bcdfa64790902d
msgid "gives a reference to the fully-qualified Idris name"
msgstr ""

#: ../source/implementation/ide-protocol.rst:237
#: c4d5e6056fef432f901aab7e9586fdb3
msgid "``implicit``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:238
#: 2551c26e6e9d4886890a0d4c75707015
msgid ""
"provides a Boolean value that is True if the region is the name of an "
"implicit argument"
msgstr ""

#: ../source/implementation/ide-protocol.rst:250
#: bac939ed2e554ee99762fb4169c560b6
msgid "``decor``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:240
#: 77cd5987578f4a32a7389e0fb9c662cd
msgid "describes the category of a token, which can be:"
msgstr ""

#: ../source/implementation/ide-protocol.rst:242
#: da025b7160d54a62940ca9729818d7a1
msgid "``type``: type constructors"
msgstr ""

#: ../source/implementation/ide-protocol.rst:244
#: 12993e523ea245719a4719560b9cdaec
msgid "``function``: defined functions"
msgstr ""

#: ../source/implementation/ide-protocol.rst:246
#: e24b7df7dd3d4244a121b46b3b0e17b5
msgid "``data``: data constructors"
msgstr ""

#: ../source/implementation/ide-protocol.rst:248
#: be823b1c5b304ef8a0b4206d91983aa8
msgid "``bound``: bound variables, or"
msgstr ""

#: ../source/implementation/ide-protocol.rst:250
#: c0ce635ebb2f44edb0c869db6ebe333e
msgid "``keyword``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:262
#: 7d18081a7bda4de69d7831a4e1970764
msgid "``source-loc``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:253
#: af73b73353434917b5a1c9e9b99a316a
msgid ""
"states that the region refers to a source code location. Its body is a "
"collection of key-value pairs, with the following possibilities:"
msgstr ""

#: ../source/implementation/ide-protocol.rst:256
#: c2c2678fb2184c6b8b3d6051b7e63fbf
msgid "``filename``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:256
#: 6c8243f35e0b4757b55a0b8673f210ae
msgid "provides the filename"
msgstr ""

#: ../source/implementation/ide-protocol.rst:259
#: 2df540ce2bc64d139389b3eaefa3f9ed
msgid "``start``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:259
#: f0663b3b1f41412a834ca7cf962bf672
msgid ""
"provides the line and column that the source location starts at as a two-"
"element tail"
msgstr ""

#: ../source/implementation/ide-protocol.rst:262
#: a00168c0c98645ad98690a14d4607500
msgid "``end``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:262
#: 553097c09eee4b438f1182245abc46c4
msgid ""
"provides the line and column that the source location ends at as a two-"
"element tail"
msgstr ""

#: ../source/implementation/ide-protocol.rst:265
#: 54892ea1051e4d7e820c13dab1c159c1
msgid "``text-formatting``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:265
#: dffe51edccd7479480a7a811c4b6faae
msgid ""
"provides an attribute of formatted text. This is for use with natural-"
"language text, not code, and is presently emitted only from inline "
"documentation. The potential values are ``bold``, ``italic``, and "
"``underline``."
msgstr ""

#: ../source/implementation/ide-protocol.rst:268
#: 5514be4aa5564c728211dba88f1dd023
msgid "``link-href``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:268
#: 8dcc15be45d74bd596537eb7dd3c077f
msgid "provides a URL that the corresponding text is a link to."
msgstr ""

#: ../source/implementation/ide-protocol.rst:271
#: 9a592abbcb944d029e966d682c59a9f6
msgid "``quasiquotation``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:271
#: 0380933eab334b5dab5fe97db7a80352
msgid "states that the region is quasiquoted."
msgstr ""

#: ../source/implementation/ide-protocol.rst:274
#: d83ce08df853493ab0d7b699e97f02cc
msgid "``antiquotation``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:274
#: 7bd90989ebfb42c9aa0b228dd8003fd2
msgid "states that the region is antiquoted."
msgstr ""

#: ../source/implementation/ide-protocol.rst:277
#: 639e5defdff24ca5a1ef62d77013661c
msgid "``tt-term``"
msgstr ""

#: ../source/implementation/ide-protocol.rst:277
#: 02a86db5753a4a8c8dc80ae6cb06bb80
msgid ""
"A serialised representation of the Idris core term corresponding to the "
"region of text."
msgstr ""

#: ../source/implementation/ide-protocol.rst:280
#: d58d0b1f479b4eda90fcd38df2c1414d
msgid "Source Code Highlighting"
msgstr ""

#: ../source/implementation/ide-protocol.rst:282
#: 89c99171c8f343f6b228926f05e6abe8
msgid ""
"Idris supports instructing editors how to colour their code. When "
"elaborating source code or REPL input, Idris will locate regions of the "
"source code corresponding to names, and emit information about these "
"names using the same metadata as output highlighting."
msgstr ""

#: ../source/implementation/ide-protocol.rst:285
#: 6678326b3ee0463f82bb6ec16dbf75e0
msgid ""
"These messages will arrive as replies to the command that caused "
"elaboration to occur, such as ``:load-file`` or ``:interpret``. They have"
" the format: ::"
msgstr ""

#: ../source/implementation/ide-protocol.rst:290
#: 09cf556fd85847f99de6ddd4036e5cf5
msgid ""
"where ``POSNS`` is a list of positions to highlight. Each of these is a "
"two-element list whose first element is a position (encoded as for the "
"``source-loc`` property above) and whose second element is highlighting "
"metadata in the same format used for output."
msgstr ""

#~ msgid ""
#~ "An example interaction from loading the"
#~ " file ``/home/hannes/empty.idr`` looks as "
#~ "follows on the wire:::"
#~ msgstr ""

#~ msgid "Possible replies include a normal final reply:::"
#~ msgstr ""

#~ msgid "A normal intermediate reply:::"
#~ msgstr ""

#~ msgid "Informational and/or abnormal replies:::"
#~ msgstr ""

#~ msgid ""
#~ "These messages will arrive as replies"
#~ " to the command that caused "
#~ "elaboration to occur, such as "
#~ "``:load-file`` or ``:interpret``. They have"
#~ " the format:::"
#~ msgstr ""
