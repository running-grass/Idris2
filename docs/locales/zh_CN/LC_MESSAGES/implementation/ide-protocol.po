# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/implementation/ide-protocol.rst:3
#: 4593c66794754bb5bbf9f7304b94e3ac
msgid "The IDE Protocol"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:5
#: 81e9435a6e8941c59d14a4451e2ff30d
msgid ""
"The Idris REPL has two modes of interaction: a human-readable syntax "
"designed for direct use in a terminal, and a machine-readable syntax "
"designed for using Idris as a backend for external tools."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:7
#: f401e8627b7c487ba40f85ac3500bece
msgid ""
"The IDE-Protocol is versioned separately from the Idris compiler. The "
"first version of Idris (written in Haskell and is at v1.3.3) implements "
"version one of the IDE Protocol, and Idris2 (self-hosting and is at "
"v.0.3.0) implements version two of the IDE Protocol."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:10
#: dc457a41f0494a9ebb79543c9a94b753
msgid ""
"The protocol and its serialisation/deserialisation routines are part of "
"the `Protocol` submodule hierarchy and are packaged in the "
"`idris2protocols.ipkg` package."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:14
#: 6e45dda723c74591846c1498c1cf9ea1
msgid "Protocol Overview"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:16
#: 8d60d63481a24ea19f811d1b3314ba4c
msgid ""
"The communication protocol is of asynchronous request-reply style: a "
"single request from the client is handled by Idris at a time. Idris waits"
" for a request on its standard input stream, and outputs the answer or "
"answers to standard output. The result of a request can be either "
"success, failure, or intermediate output; and furthermore, before the "
"result is delivered, there might be additional meta-messages."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:21
#: 4549bfa6ca4341ccba12dee88238f2cb
msgid ""
"A reply can consist of multiple messages: any number of messages to "
"inform the user about the progress of the request or other informational "
"output, and finally a result, either ``ok`` or ``error``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:23
#: fbc44354d9d649c48ae0d333017a377b
msgid ""
"The wire format is the length of the message in characters, encoded in 6 "
"characters hexadecimal, followed by the message encoded as S-expression "
"(sexp). Additionally, each request includes a unique integer (counting "
"upwards), which is repeated in all messages corresponding to that "
"request."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:26
#: 39581722af964c2a87e815a77302bfb9
msgid ""
"An example interaction from loading the file ``/home/hannes/empty.idr`` "
"looks as follows on the wire:::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:34
#: 9103f353e8eb4817aab0fde062c07d8e
msgid ""
"The first message is the request from idris-mode to load the specific "
"file, which length is hex 2a, decimal 42 (including the newline at the "
"end). The request identifier is set to 1. The first message from Idris is"
" to write the string ``Type checking /home/hannes/empty.idr``, another is"
" to set the prompt to ``*/home/hannes/empty``. The answer, starting with "
"``:return`` is ``ok``, and additional information is that the file was "
"loaded."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:39
#: 9ed3eb50f6f048eca5a8640418e18028
msgid ""
"There are three atoms in the wire language: numbers, strings, and "
"symbols. The only compound object is a list, which is surrounded by "
"parenthesis. The syntax is::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:46
#: 3af0322ea31840f7be7d73f8b2f502ab
msgid ""
"where ``NUM`` is either 0 or a positive integer, ``ALPHA`` is an "
"alphabetical character, and ``STR`` is the contents of a string, with "
"``\"`` escaped by a backslash. The atom ``nil`` is accepted instead of "
"``()`` for compatibility with some regexp pretty-printing routines."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:49
#: f02151e32444460694da6b5143db182a
msgid ""
"The state of the Idris process is mainly the active file, which needs to "
"be kept synchronised between the editor and Idris. This is achieved by "
"the already seen ``:load-file`` command."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:53
#: 52aa6dc61ef44cb1b9b44c61dddd4834
msgid "Protocol Versioning"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:55
#: d1e63e0c772441e99c11e368fe69ccfd
msgid ""
"When interacting with Idris through the IDE Protocol the initial message "
"sent by the running Idris Process is the version (major and minor) of the"
" IDE Protocol being used."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:57
#: d371b6c0343e466a85f3dbf951f644a1
msgid "The expected message has the following format:"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:59
#: 153d950c3a314a50b11649becff81ac1
msgid "``(:protocol-version MAJOR MINOR)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:61
#: 5b522eb3ee984bce9483534d6faa14da
msgid "IDE Clients can use this to help support multiple Idris versions."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:64
#: 182659a5eeaa4e2caff98bfd4ab90c73
msgid "Commands"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:66
#: 1b4d378bd1214bff80136a312043198f
msgid ""
"The available commands are listed below. They are compatible with Version"
" 1 and 2.0 of the protocol unless otherwise stated."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:71
#: 4b8e1444f3214f9f9fe0056291cc1a7d
msgid "``(:load-file FILENAME [LINE])``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:70
#: bdb619458e4648f2a63efaed0baa9aba
msgid ""
"Load the named file.  If a ``LINE`` number is provided, the file is only "
"loaded up to that line.  Otherwise, the entire file is loaded. Version 2 "
"of the IDE Protocol requires that the file name be a quoted string, as in"
" ``(:load-file \"MyFile.idr\")`` and not ``(:load-file MyFile.idr)``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:75
#: 85b1c087f31f4ef888f7e5c2ba232045
msgid "``(:cd FILEPATH)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:74
#: 3bf6f5ae2dbd4a18b5b639931ba1bc9f
msgid ""
"Change the working direction to the given ``FILEPATH``. Version 2 of the "
"IDE Protocol requires that the path is quoted, as in ``(:cd \"a/b/c\")`` "
"and not ``(:cd a/b/c)``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:78
#: df461a577348458195aa8f222e3eacf2
msgid "``(:interpret STRING)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:78
#: f9f65b82afda4cbc91186c703b745992
msgid "Interpret ``STRING`` at the Idris REPL, returning a highlighted result."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:82
#: b17fe07b14e148d288ff9d8d5ee646f5
msgid "``(:type-of STRING)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:81
#: 10aed747909f4f5eabd3b097b0ce1f18
msgid ""
"Return the type of the name, written with Idris syntax in the ``STRING``."
" The reply may contain highlighting information."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:86
#: d6fb1ebb89874f34aa8c918a2db4570f
msgid "``(:case-split LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:85
#: 0ef199cdca6942ea88db8359b6ab2373
msgid ""
"Generate a case-split for the pattern variable ``NAME`` on program line "
"``LINE``. The pattern-match cases to be substituted are returned as a "
"string with no highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:90
#: 5e768affb766470fb5f01d5a943a8bae
msgid "``(:add-clause LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:89
#: 9bd5c06d1fd3454caeea2835ad34840d
msgid ""
"Generate an initial pattern-match clause for the function declared as "
"``NAME`` on program line ``LINE``. The initial clause is returned as a "
"string with no highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:93
#: 74f9e8bdd4b7449597f0db2ceffb7358
msgid "``(:add-proof-clause LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:93
#: 44569e7743304ca79c5234f857f8f91b
msgid "Add a clause driven by the ``<==`` syntax."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:97
#: 4ef0ca01d2e34d949f6e81109260b1cd
msgid "``(:add-missing LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:96
#: 1b2c6c679181402092ef2e043c30f588
msgid ""
"Add the missing cases discovered by totality checking the function "
"declared as ``NAME`` on program line ``LINE``. The missing clauses are "
"returned as a string with no highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:101
#: 103cc74d79a74b779547ad585af3313b
msgid "``(:make-with LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:100
#: ec2051edfd0f4d129636eb348b55d175
msgid ""
"Create a with-rule pattern match template for the clause of function "
"``NAME`` on line ``LINE``. The new code is returned with no highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:105
#: a73fef20295a4c418e22ceaadfa4f76b
msgid "``(:make-case LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:104
#: 6c2016b29d244681bb3c9c40c66cf3c1
msgid ""
"Create a case pattern match template for the clause of function ``NAME`` "
"on line ``LINE``. The new code is returned with no highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:108
#: 27946d2becb74513abfe4c9e922c7b36
msgid "``(:make-lemma LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:108
#: a0ef85580b3243aabcfcb8ffcca6622a
msgid ""
"Create a top level function with a type which solves the hole named "
"``NAME`` on line ``LINE``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:113
#: 5ea03a4010db4b5d93334d319f5263e5
msgid "``(:proof-search LINE NAME HINTS)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:111
#: ecc2593af7bf4fc1a612a7f3c37150fc
msgid ""
"Attempt to fill out the hole on ``LINE`` named ``NAME`` by proof search. "
"``HINTS`` is a possibly-empty list of additional things to try while "
"searching. This operation is also called ``ExprSearch`` in the Idris 2 "
"API."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:116
#: ee7fa2fe3de441efa93fa8c6dd656458
msgid "``(:refine LINE NAME TM)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:116
#: d259e889d7574c959a927f5550b61a85
msgid "Refine the hole on ``LINE`` named ``NAME`` by using the term ``TM``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:121
#: 382562320ed542d8849c117d3dca42d0
msgid "``(:docs-for NAME [MODE])``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:119
#: ca3db01208544dddbaa2f2700ec8bed6
msgid ""
"Look up the documentation for ``NAME``, and return it as a highlighted "
"string. If ``MODE`` is ``:overview``, only the first paragraph of "
"documentation is provided for ``NAME``. If ``MODE`` is ``:full``, or "
"omitted, the full documentation is returned for ``NAME``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:124
#: a7b9bab91b24408aaf03dc42effd7ae6
msgid "``(:apropos STRING)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:124
#: 3546abf21c8a43708cdaf2f195e1247d
msgid ""
"Search the documentation for mentions of ``STRING``, and return any found"
" as a list of highlighted strings."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:127
#: 9be830181846410998c186d133ca5945
msgid "``(:metavariables WIDTH)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:127
#: da0399c6d30f46f29575b3adc1701008
msgid ""
"List the currently-active holes, with their types pretty-printed in "
"``WIDTH`` columns."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:130
#: 472da44668ea49659c5525f2f0ef9005
msgid "``(:who-calls NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:130
#: a1cee0bc41784dfebcac78a4214a3ed4
msgid "Get a list of callers of ``NAME``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:133
#: e2a2e491e55b414d9a04f71a41e81767
msgid "``(:calls-who NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:133
#: 8de30ef6d9a14f7fa7a7187fec17f1d0
msgid "Get a list of callees of ``NAME``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:136
#: 5e356a74f2f24776905d3c3a34992971
msgid "``(:browse-namespace NAMESPACE)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:136
#: e186168af9e64f54b575fc4439b76a5b
msgid ""
"Return the contents of ``NAMESPACE``, like ``:browse`` at the command-"
"line REPL."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:139
#: 2dfeac2a123f4bb4bf3f8e940b549109
msgid "``(:normalise-term TM)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:139
#: ee28617fa3034a22bce3e7bbb8dc155d
msgid ""
"Return a highlighted string consisting of the results of normalising the "
"serialised term ``TM`` (which would previously have been sent as the "
"``tt-term`` property of a string)."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:143
#: 0403e73f008b4adcb56cbd97d18bc405
msgid "``(:show-term-implicits TM)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:142
#: 4b4cb7b214d04f6d80bcacf422bc46d0
msgid ""
"Return a highlighted string, consisting of the results of making all "
"arguments in serialised term ``TM`` explicit. The arguments in ``TM`` "
"would previously have been sent as the ``tt-term`` property of a string."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:147
#: 71d62140780342ee8bdf57123a877d80
msgid "``(:hide-term-implicits TM)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:146
#: 1a0ff77c86a347c78cdf22015655499e
msgid ""
"Return a highlighted string, consisting of the results of making all "
"arguments in serialised term ``TM`` follow their usual implicitness "
"setting. The arguments in ``TM`` would previously have been sent as the "
"``tt-term`` property of a string."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:151
#: 5065069612dd4a29b780cb3542992270
msgid "``(:elaborate-term TM)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:150
#: 37db1f9b42c04c989bad4e3ad7b59366
msgid ""
"Return a highlighted string, consisting of the core language term "
"corresponding to serialised term ``TM``. The arguments in ``TM`` would "
"previously have been sent as the ``tt-term`` property of a string."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:154
#: bf8a8a05d6494d3ebda1be8031c88320
msgid "``(:print-definition NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:154
#: cb18ec7d6c19451abedb7ed6510b7076
msgid "Return the definition of ``NAME`` as a highlighted string."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:157
#: d4e70727a8d942e38072e0a8f5065681
msgid "``(:repl-completions NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:157
#: 913b4166d39041ec9a15925b1dceec1c
msgid ""
"Search names, types and documentations which contain ``NAME``. Return the"
" result of tab-completing ``NAME`` as a REPL command."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:160
#: 8737af42094b4bc5bc48dc10b5e13812
msgid "``:version``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:160
#: eea9d5aa48774476970cdb7121546383
msgid "Return the version information of the Idris compiler."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:163
#: 34761838b0e04c85ba2e5caf805bd971
msgid "New For Version 2"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:165
#: 90d9dd307dc146fa8cc6f1c912f36911
msgid "New in Version 2 of the protocol are:"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:168
#: 7025bdd4bb3a44b4b05daeb00871ff59
msgid "``(:generate-def LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:168
#: 48cf1c8314494fd383467b15487b196a
msgid "Attempt to generate a complete definition from a type."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:171
#: 837d297161dd42ee9e1e6844e07700ce
msgid "``(:generate-def-next)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:171
#: 536ca0f045104fab890f901340496aba
msgid ""
"Replace the previous generated definition with the next generated "
"definition."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:174
#: a7284aad6aa44a2fb21789ca2194c905
msgid "``(:proof-search-next)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:174
#: 30bbc532961f432bb04edf1902d8752c
msgid ""
"Replace the previous proof search result with the next proof search "
"result."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:178
#: 9ceaa64de7ec4d7595c3a0a593d39208
msgid "``(:intro LINE NAME)``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:177
#: e3c4f532a01149768c5d53da1dedd411
msgid ""
"Returns the non-empty list of valid saturated constructors that can be "
"used in the hole at line ``LINE`` named ``NAME``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:181
#: f0240bca990a48389b5c73357773db67
msgid "Possible Replies"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:183
#: 14edd45ec2a34daca96edb61f7442da8
msgid "Possible replies include a normal final reply:::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:188
#: 6f979d9a3ef74c1daf9b0815966d45bd
msgid "A normal intermediate reply:::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:193
#: fa877d74b9b943328a13d89c43934306
msgid "Informational and/or abnormal replies:::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:200
#: b748745caad848a1bc50372bbc0d4892
msgid "Warnings include compiler errors that don't cause the compiler to stop."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:203
#: 257d9a52bd3d462e86d285bb9870ea7d
msgid "Output Highlighting"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:205
#: fc062221b9304abe8cee4aeb33a2cfc6
msgid ""
"Idris mode supports highlighting the output from Idris. In reality, this "
"highlighting is controlled by the Idris compiler. Some of the return "
"forms from Idris support an optional extra parameter: a list mapping "
"spans of text to metadata about that text. Clients can then use this list"
" both to highlight the displayed output and to enable richer interaction "
"by having more metadata present. For example, the Emacs mode allows "
"right-clicking identifiers to get a menu with access to documentation and"
" type signatures."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:212
#: a69aadadd98648dbaf32c52dc5dc948b
msgid ""
"A particular semantic span is a three element list. The first element of "
"the list is the index at which the span begins, the second element is the"
" number of characters included in the span, and the third is the semantic"
" data itself. The semantic data is a list of lists. The head of each list"
" is a key that denotes what kind of metadata is in the list, and the tail"
" is the metadata itself."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:260
#: 127794ea5c604768a9af516ff53fb542
msgid "The following keys are available:"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:218
#: ae10ac6e6938470daec19370e0a24f77
msgid "``name``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:219
#: c3ba90c49e9e44f3ad47a40960e18eaf
msgid "gives a reference to the fully-qualified Idris name"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:220
#: de1cab95829b4d9a8f86d0289c752f22
msgid "``implicit``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:221
#: 93e0b9d357b94cabba3bbcca9bcdf2cd
msgid ""
"provides a Boolean value that is True if the region is the name of an "
"implicit argument"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:233
#: e9d1fa8203554de99cfe726966d7932f
msgid "``decor``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:223
#: f0968b9bf8224fa2a21c643e4dd10ab7
msgid "describes the category of a token, which can be:"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:225
#: 43054a7ef43341458e93ea6d24b979a7
msgid "``type``: type constructors"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:227
#: 792d7546979143d5a82f8933cb4e768a
msgid "``function``: defined functions"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:229
#: 5ef92ca1fea44186933ce0cef9888d73
msgid "``data``: data constructors"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:231
#: c1a4e1f6e6364fa5b05efd0096ac18f9
msgid "``bound``: bound variables, or"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:233
#: d5d6afc3e2fd487abb7e92620c25caad
msgid "``keyword``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:245
#: 7bd1119f7581454f99eda13d1b34d7da
msgid "``source-loc``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:236
#: 9a1ba683c1704bc1a8b5976e9f5ffc53
msgid ""
"states that the region refers to a source code location. Its body is a "
"collection of key-value pairs, with the following possibilities:"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:239
#: 01ac4083807a44919a85c83ca3be2fc3
msgid "``filename``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:239
#: 8fe1cb50908d4bc4adc0bdc90a70aef6
msgid "provides the filename"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:242
#: 432604a540c94b55b2eaac9546435890
msgid "``start``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:242
#: 022c80281c354e3d835ec899c49284ee
msgid ""
"provides the line and column that the source location starts at as a two-"
"element tail"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:245
#: a8f448186a534377be4352253caa06de
msgid "``end``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:245
#: 33c907a45cf343cd839639b6e948fca1
msgid ""
"provides the line and column that the source location ends at as a two-"
"element tail"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:248
#: d53bebd4caa848b096f649484127dc59
msgid "``text-formatting``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:248
#: 57ce6ecabae2420cb37a00297d8031d8
msgid ""
"provides an attribute of formatted text. This is for use with natural-"
"language text, not code, and is presently emitted only from inline "
"documentation. The potential values are ``bold``, ``italic``, and "
"``underline``."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:251
#: 2e918bee94344e59bc75445a2f0acc59
msgid "``link-href``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:251
#: 081be5369ac64b2cbd072de832c47785
msgid "provides a URL that the corresponding text is a link to."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:254
#: db0eff065dfc43a9b592e2734357f551
msgid "``quasiquotation``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:254
#: 4497203ba88e43dda98b19557d00a53c
msgid "states that the region is quasiquoted."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:257
#: e05c2a3b839245feb01b53a8081a12b2
msgid "``antiquotation``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:257
#: 5aff5c43eca744ec82518d798019335a
msgid "states that the region is antiquoted."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:260
#: 88a8300705424cf487de0213aef3234e
msgid "``tt-term``"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:260
#: a4740ceeae8940f1a35a6c2bc8fe244e
msgid ""
"A serialised representation of the Idris core term corresponding to the "
"region of text."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:263
#: 613ed1c94c624808ab2e6c93ed3fbc45
msgid "Source Code Highlighting"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:265
#: 8fd6ba9b426b4ef39d3e2d3f9cbf4582
msgid ""
"Idris supports instructing editors how to colour their code. When "
"elaborating source code or REPL input, Idris will locate regions of the "
"source code corresponding to names, and emit information about these "
"names using the same metadata as output highlighting."
msgstr ""

#: ../../source/implementation/ide-protocol.rst:268
#: 134d53e6298146ac8dc3e84ab9700201
msgid ""
"These messages will arrive as replies to the command that caused "
"elaboration to occur, such as ``:load-file`` or ``:interpret``. They have"
" the format:::"
msgstr ""

#: ../../source/implementation/ide-protocol.rst:273
#: 3b47edde3ca2454e8ab9be5994ca75b4
msgid ""
"where ``POSNS`` is a list of positions to highlight. Each of these is a "
"two-element list whose first element is a position (encoded as for the "
"``source-loc`` property above) and whose second element is highlighting "
"metadata in the same format used for output."
msgstr ""

