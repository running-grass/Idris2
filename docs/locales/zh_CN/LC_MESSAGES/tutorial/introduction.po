# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/tutorial/introduction.rst:5 5702ba2615e04e0bb8e7b7b131976084
msgid "Introduction"
msgstr ""

#: ../../source/tutorial/introduction.rst:7 9192669ece764e44994c384b5bdf7cb3
msgid ""
"In conventional programming languages, there is a clear distinction "
"between *types* and *values*. For example, in `Haskell "
"<https://www.haskell.org>`_, the following are types, representing "
"integers, characters, lists of characters, and lists of any value "
"respectively:"
msgstr ""

#: ../../source/tutorial/introduction.rst:13 91042eafb2434b19bbd4092702c8d9dc
msgid "``Int``, ``Char``, ``[Char]``, ``[a]``"
msgstr ""

#: ../../source/tutorial/introduction.rst:15 d6c659cdef7f40e49557ef72444050de
msgid ""
"Correspondingly, the following values are examples of inhabitants of "
"those types:"
msgstr ""

#: ../../source/tutorial/introduction.rst:18 efc04a7f8d764901b53396694510a8e6
msgid "``42``, ``’a’``, ``\"Hello world!\"``, ``[2,3,4,5,6]``"
msgstr ""

#: ../../source/tutorial/introduction.rst:20 559d7948a0bd4b10bcbab8caa81920c9
msgid ""
"In a language with *dependent types*, however, the distinction is less "
"clear. Dependent types allow types to “depend” on values — in other "
"words, types are a *first class* language construct and can be "
"manipulated like any other value. The standard example is the type of "
"lists of a given length [#fn1]_, ``Vect n a``, where ``a`` is the element"
" type and ``n`` is the length of the list and can be an arbitrary term."
msgstr ""

#: ../../source/tutorial/introduction.rst:27 c8f53a8a42a94c5aadb021ee98eaddbf
msgid ""
"When types can contain values, and where those values describe "
"properties, for example the length of a list, the type of a function can "
"begin to describe its own properties. Take for example the concatenation "
"of two lists. This operation has the property that the resulting list's "
"length is the sum of the lengths of the two input lists. We can therefore"
" give the following type to the ``app`` function, which concatenates "
"vectors:"
msgstr ""

#: ../../source/tutorial/introduction.rst:39 9b6bec8e37774cb0b8e0f4e30c1335c7
msgid ""
"This tutorial introduces Idris, a general purpose functional programming "
"language with dependent types. The goal of the Idris project is to build "
"a dependently typed language suitable for verifiable general purpose "
"programming. To this end, Idris is a compiled language which aims to "
"generate efficient executable code. It also has a lightweight foreign "
"function interface which allows easy interaction with external libraries."
msgstr ""

#: ../../source/tutorial/introduction.rst:48 4d3fc6bb232845429b981a01b123d66d
msgid "Intended Audience"
msgstr ""

#: ../../source/tutorial/introduction.rst:50 50f15d30c52f4f32983c21af483989bb
msgid ""
"This tutorial is intended as a brief introduction to the language, and is"
" aimed at readers already familiar with a functional language such as "
"`Haskell <https://www.haskell.org>`_ or `OCaml <https://ocaml.org>`_. In "
"particular, a certain amount of familiarity with Haskell syntax is "
"assumed, although most concepts will at least be explained briefly. The "
"reader is also assumed to have some interest in using dependent types for"
" writing and verifying software."
msgstr ""

#: ../../source/tutorial/introduction.rst:58 338d8d6a8141458d8d5669ddfffe12c6
msgid ""
"For a more in-depth introduction to Idris, which proceeds at a much "
"slower pace, covering interactive program development, with many more "
"examples, see `Type-Driven Development with Idris "
"<https://www.manning.com/books/type-driven-development-with-idris>`_ by "
"Edwin Brady, available from `Manning <https://www.manning.com>`_."
msgstr ""

#: ../../source/tutorial/introduction.rst:64 c078d9f200c845f6ab2a1d51f1fa7f7e
msgid "Example Code"
msgstr ""

#: ../../source/tutorial/introduction.rst:66 97c04fa36cf540a086b256eadcbb5741
msgid ""
"This tutorial includes some example code, which has been tested against "
"Idris 2. These files are available with the Idris 2 distribution, so that"
" you can try them out easily. They can be found under ``samples``. It is,"
" however, strongly recommended that you type them in yourself, rather "
"than simply loading and reading them."
msgstr ""

#: ../../source/tutorial/introduction.rst:73 b2b8199b5337428d9adedd78117d87a5
msgid "Footnotes"
msgstr ""

#: ../../source/tutorial/introduction.rst:74 d42d0120d86443b7b1e6e0090c7289c2
msgid ""
"Typically, and perhaps confusingly, referred to in the dependently typed "
"programming literature as \"vectors\"."
msgstr ""

