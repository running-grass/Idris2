# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 09:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/tutorial/starting.rst:5 962fd9ba054247859ebece0ba2e3b82c
msgid "Getting Started"
msgstr ""

#: ../../source/tutorial/starting.rst:8 45d3ec57c4d6458b9a5ec975b9cec16b
msgid "Installing from Source"
msgstr ""

#: ../../source/tutorial/starting.rst:16 dafa3d7010dd4cb8952782632f8fd7d7
msgid "Prerequisites"
msgstr ""

#: ../../source/tutorial/starting.rst:18 1e21840c31ed4d40956b9e2e9420777d
msgid ""
"Idris 2 is implemented in Idris 2 itself, so to bootstrap it you can "
"build from generated Scheme sources. To do this, you need either Chez "
"Scheme (default, and currently preferred since it is the fastest) or "
"Racket. You can get one of these from:"
msgstr ""

#: ../../source/tutorial/starting.rst:23 f7ef37909f4c45ddbd1ba95df74904fb
msgid "`Chez Scheme <https://cisco.github.io/ChezScheme/>`_"
msgstr ""

#: ../../source/tutorial/starting.rst:24 df89931350ae42b694ca868bc0196aa9
msgid "`Racket <https://download.racket-lang.org/>`_"
msgstr ""

#: ../../source/tutorial/starting.rst:26 83a51d4b4af5470db6691dd7c14e3572
msgid ""
"Both are also available from MacPorts/Homebrew and all major Linux "
"distributions. Windows requires some further prerequisites, see :ref"
":`windows-install`."
msgstr ""

#: ../../source/tutorial/starting.rst:29 f66c39fcdfd14ae193b666cc290ff6be
msgid ""
"**Note**: If you install Chez Scheme from source files, building it "
"locally, make sure you run ``./configure --threads`` to build "
"multithreading support in."
msgstr ""

#: ../../source/tutorial/starting.rst:33 feb81038cfaf423dbf4c84866e5abc7f
msgid "Downloading and Installing"
msgstr ""

#: ../../source/tutorial/starting.rst:35 f97d3581b0b14fa8bf3271a0233c7374
msgid ""
"You can download the Idris 2 source from the `Idris web site <https://www"
".idris-lang.org/pages/download.html>`_ or get the latest development "
"version from `idris-lang/Idris2 <https://github.com/idris-lang/Idris2>`_ "
"on Github.  This includes the Idris 2 source code and the Scheme code "
"generated from that.  Once you have unpacked the source, you can install "
"it as follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:44 ba8f1bc71ffe4531bc0bf00ae7e4a956
msgid ""
"Where `chez` is the executable name of the Chez Scheme compiler. This "
"will vary from system to system, but is often one of ``scheme``, "
"``chezscheme``, or ``chezscheme9.5``. If you are building via Racket, you"
" can install it as follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:51 bd9b3466d41a4c19980564a50bcef891
msgid ""
"Once you've successfully bootstrapped with any of the above commands, you"
" can install with the command ``make install``.  This will, by default, "
"install into ``${HOME}/.idris2``. You can change this by editing the "
"options in ``config.mk``. For example, to install into ``/usr/local``, "
"you can edit the ``IDRIS2_PREFIX`` as follows::"
msgstr ""

#: ../../source/tutorial/starting.rst:60 bf3d4194e773467fa00642ec17ffff8d
msgid "Installing from a Package Manager"
msgstr ""

#: ../../source/tutorial/starting.rst:63 5b4dcd92d3da4698863b02091edd3c28
msgid "Installing Using Homebrew"
msgstr ""

#: ../../source/tutorial/starting.rst:65 0d706731441a4ca6883d49c2dea12498
msgid ""
"If you are Homebrew user you can install Idris 2 together with all the "
"requirements by running following command::"
msgstr ""

#: ../../source/tutorial/starting.rst:71 9b2e815c192b45deadbfb6e4bbb07aad
msgid "Checking Installation"
msgstr ""

#: ../../source/tutorial/starting.rst:73 272e8ae601214b1aa5f2e73de7613c6c
msgid ""
"To check that installation has succeeded, and to write your first Idris "
"program, create a file called ``hello.idr`` containing the following "
"text:"
msgstr ""

#: ../../source/tutorial/starting.rst:84 46c60828a43a4b8cbfe21aa35de82f8f
msgid ""
"If you are familiar with Haskell, it should be fairly clear what the "
"program is doing and how it works, but if not, we will explain the "
"details later. You can compile the program to an executable by entering "
"``idris2 hello.idr -o hello`` at the shell prompt. This will, by default,"
" create an executable called ``hello``, which invokes a generated and "
"compiled Chez Scheme program, in the destination directory ``build/exec``"
" which you can run:"
msgstr ""

#: ../../source/tutorial/starting.rst:98 373070ac162d46019e40b2a5782ca8c6
msgid ""
"Please note that the dollar sign ``$`` indicates the shell prompt! Some "
"useful options to the Idris command are:"
msgstr ""

#: ../../source/tutorial/starting.rst:101 9d247c60e5a14725902a19cf83017bca
msgid "``-o prog`` to compile to an executable called ``prog``."
msgstr ""

#: ../../source/tutorial/starting.rst:103 ebc7c7869b3341a1b04687fc78f91772
msgid ""
"``--check`` type check the file and its dependencies without starting the"
" interactive environment."
msgstr ""

#: ../../source/tutorial/starting.rst:105 a33fffb025304b5a918e473b25d3843a
msgid ""
"``--package pkg`` add package as dependency, e.g. ``--package contrib`` "
"to make use of the contrib package."
msgstr ""

#: ../../source/tutorial/starting.rst:107 642fd0dd5ca142b19c2f00bbf62e812e
msgid "``--help`` display usage summary and command line options."
msgstr ""

#: ../../source/tutorial/starting.rst:109 5bd1cd1880af4f188694b651eb4ff640
msgid ""
"You can find out more about compiling to executables in Section :ref"
":`sect-execs`."
msgstr ""

#: ../../source/tutorial/starting.rst:113 20f37569b5f340288ac0e2a26a2dceeb
msgid "The Interactive Environment"
msgstr ""

#: ../../source/tutorial/starting.rst:115 b8c976fa1229434a89753f65a55121b0
msgid ""
"Entering ``idris2`` at the shell prompt starts up the interactive "
"environment. You should see something like the following:"
msgstr ""

#: ../../source/tutorial/starting.rst:120 2d415542cfb44b3d99a940ec1f087dca
msgid ""
"This gives a ``ghci`` style interface which allows evaluation of, as well"
" as type checking of, expressions; theorem proving, compilation; editing;"
" and various other operations. The command ``:?`` gives a list of "
"supported commands. Below, we see an example run in which ``hello.idr`` "
"is loaded, the type of ``main`` is checked and then the program is "
"compiled to the executable file ``hello``, available in the destination "
"directory ``build/exec/``. Type checking a file, if successful, creates a"
" bytecode version of the file (in this case ``build/ttc/hello.ttc``) to "
"speed up loading in future. The bytecode is regenerated if the source "
"file changes."
msgstr ""

