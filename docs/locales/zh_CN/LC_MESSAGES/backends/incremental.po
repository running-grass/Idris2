# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: 2022-07-22 15:31+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://weblate.grass.work:30443/"
"projects/idris2/backendsincremental/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.13.1\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/backends/incremental.rst:3 53e6d502e33d478c8991c9230ef9c80b
msgid "Incremental Code Generation"
msgstr ""

#: ../../source/backends/incremental.rst:5 e2ec25eb2b554efc993db78cfb64480a
#, fuzzy
msgid ""
"By default, Idris 2 is a whole program compiler - that is, it finds all "
"the necessary function definitions and compiles them only when you build "
"an executable. This gives plenty of optimisation opportunities, but can "
"also be slow for rebuilding. However, if the backend supports it, you can"
" build modules and executables *incrementally*. To do so, you can either:"
msgstr ""
"默认情况下，Idris 2 是一个完整的程序编译器 - 也就是说，它找到所有必要的函数定"
"义，并在你构建可执行文件时才编译它们。这提供了大量的优化机会，但对于重新构建"
"来说可能会很慢。然而，如果后端支持的话，你可以 *增量* 构建模块和可执行文件："

#: ../../source/backends/incremental.rst:11 c6e899075f0e4a86861e04b0e8c5a477
msgid ""
"Set the ``--inc <backend>`` flag at the command line, for each backend "
"you want to use incrementally."
msgstr ""

#: ../../source/backends/incremental.rst:13 8b9f9932ab92486d863153f2177a5396
msgid ""
"Set the ``IDRIS2_INC_CGS`` environment variable with a comma separated "
"list of backends to use incrementally."
msgstr ""

#: ../../source/backends/incremental.rst:16 763ea4fbe6794e93afba2ac2d57e1bb8
msgid "At the moment, only the Chez backend supports incremental builds."
msgstr ""

#: ../../source/backends/incremental.rst:19 5398ab8f1b7f421d82951157fb635b06
msgid "Building modules incrementally"
msgstr ""

#: ../../source/backends/incremental.rst:21 054915d9b3c64159b0ff66d1210f2fd3
msgid ""
"If either of the above are set, building a module will produce compiled "
"binary code for all of the definitions in the module, as well as the "
"usual checked TTC file. e.g.:"
msgstr ""

#: ../../source/backends/incremental.rst:30 ed58cdd5072f409fab85bb8d7bc20417
msgid ""
"On successful type checking, each of these will produce a Chez Scheme "
"file (``Foo.ss``) and compiled code for it (``Foo.so``) as well as the "
"usual ``Foo.ttc``, in the same build directory as ``Foo.ttc``."
msgstr ""

#: ../../source/backends/incremental.rst:34 4c319e040f0f48eab2326c6c2b702059
msgid ""
"In incremental mode, you will see a warning for any holes in the module, "
"even if those holes will be defined in a different module."
msgstr ""

#: ../../source/backends/incremental.rst:38 921e6f7629704a01a654e8871d93d4f0
msgid "Building executables incrementally"
msgstr ""

#: ../../source/backends/incremental.rst:40 e817bd78a594499ba78106c0b9e25c27
msgid ""
"If either ``--inc`` is used or ``IDRIS2_INC_CGS`` is set, compiling to an"
" executable will attempt to link all of the compiled modules together, "
"rather than generating code for all of the functions at once. For this to"
" work, all the imported modules *must* have been built with incremental "
"compilation for the current back end (Idris will revert to whole program "
"compilation if any are missing, and you will see a warning.)"
msgstr ""

#: ../../source/backends/incremental.rst:47 9afaba9ab59c4a6d8e3d51b743db2f01
msgid ""
"Therefore, all packages used by the executable must also have been built "
"incrementally for the current back end. The ``prelude``, ``base``, "
"``contrib``, ``network`` and ``test`` packages are all built with "
"incremental compilation support for Chez by default."
msgstr ""

#: ../../source/backends/incremental.rst:52 e8d5c89788414426b6f979904607f849
msgid ""
"When switching between incremental and whole program compilation, it is "
"recommended that you remove the ``build`` directory first. This is "
"particularly important when switching to incremental compilation, since "
"there may be stale object files that Idris does not currently detect!"
msgstr ""

#: ../../source/backends/incremental.rst:59 fef41ce4df6145d48f3541ec27299cf5
msgid "Overriding incremental compilation"
msgstr ""

#: ../../source/backends/incremental.rst:61 165628694c1b4ffaaa1f07c8658a843b
msgid ""
"The ``--whole-program`` flag overrides any incremental compilation "
"settings when building an executable."
msgstr ""

#: ../../source/backends/incremental.rst:65 5af55193209f47d8b538a28600b11fc4
msgid "Performance note"
msgstr ""

#: ../../source/backends/incremental.rst:67 caeceb73eb92476993d6fbff56c685fc
msgid ""
"Incremental compilation means that executables are generated much "
"quicker, especially when only a small proportion of modules have changed."
" However, it means that there are fewer optimisation opportunities, so "
"the resulting executable will not perform as well. For deployment, "
"``--whole-program`` compilation is recommended."
msgstr ""
