# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Idris Community
# This file is distributed under the same license as the Idris2 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Idris2 0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-12 11:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/reference/pragmas.rst:3 16db4fca1c4f48328039a6f6ec6cb99d
msgid "Pragmas"
msgstr ""

#: ../../source/reference/pragmas.rst:8 b88c8ccb447e4a05bc5490698563c96b
msgid ""
"Idris2 supports a number of pragmas (identifiable by the `%` prefix). "
"Some pragmas change compiler behavior until the behavior is changed back "
"using the same pragma while others apply to the following declaration. A "
"small niche of pragmas apply directly to one or more arguments instead of"
" the code following the pragma (like the `%name` pragma described below)."
msgstr ""

#: ../../source/reference/pragmas.rst:14 03a7d9dc8b884874bcc88998536f6c2d
msgid ""
"This page is a work in progress. If you know about a pragma that is not "
"described yet, please consider submitting a pull request!"
msgstr ""

#: ../../source/reference/pragmas.rst:19 99800c9797084edeae6dfe617c1fb000
msgid "``%builtin``"
msgstr ""

#: ../../source/reference/pragmas.rst:21 6e9e38ea13e14a4f9fedabeb937dddf9
msgid ""
"The ``%builtin Natural`` pragma converts recursive/unary representations "
"of natural numbers into primitive ``Integer`` representations."
msgstr ""

#: ../../source/reference/pragmas.rst:24 293a323dc65749cdb199e869564c8aa4
msgid ""
"This pragma is explained in detail on its own page. For more, see "
":ref:`builtins`."
msgstr ""

#: ../../source/reference/pragmas.rst:27 1b7bf7c5c4ea4a31b155dd131c647f96
#, python-format
msgid "``%deprecate``"
msgstr ""

#: ../../source/reference/pragmas.rst:29 d4fb54c50a9f44429b36317d2d1b6b20
msgid ""
"Mark the following definition as deprecated. Whenever the function is "
"used, Idris will show a deprecation warning."
msgstr ""

#: ../../source/reference/pragmas.rst:45 1c5023ce97fc44b6a373791d26af58cb
msgid ""
"You can use code documentation (triple vertical bar `||| docs`) to "
"suggest a strategy for removing the deprecated function call and that "
"documentation will be displayed alongside the warning."
msgstr ""

#: ../../source/reference/pragmas.rst:64 4c44530d298d4751b463a1069300ce33
#, python-format
msgid "``%inline``"
msgstr ""

#: ../../source/reference/pragmas.rst:66 a9a64736cfb34f0188d17080233747c8
msgid ""
"Instruct the compiler to inline the following definition when it is "
"applied. It is generally best to let the compiler and the backend you are"
" using optimize code based on its predetermined rules, but if you want to"
" force a function to be inlined when it is called, this pragma will force"
" it."
msgstr ""

#: ../../source/reference/pragmas.rst:77 6b05b3443c2d4d85adf78ca4449ee42a
msgid "``%noinline``"
msgstr ""

#: ../../source/reference/pragmas.rst:79 68f23af87a7d421784caf4d1b0ffb579
msgid ""
"Instruct the compiler _not_ to inline the following definition when it is"
" applied. It is generally best to let the compiler and the backend you "
"are using optimize code based on its predetermined rules, but if you want"
" to force a function to never be inlined when it is called, this pragma "
"will force it."
msgstr ""

#: ../../source/reference/pragmas.rst:90 8df1f4a3bb0849ac8625cfdda60a81e2
msgid "``%name``"
msgstr ""

#: ../../source/reference/pragmas.rst:92 84b4a865a9da4816b823cce6bacee4bd
msgid ""
"Give the compiler some suggested names to use for a particular type when "
"it is asked to generate names for values. You can specify any number of "
"suggested names; they will be used in-order when more than one is needed "
"for a single definition."
msgstr ""

